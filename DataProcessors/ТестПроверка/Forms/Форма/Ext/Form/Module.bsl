&НаСервере
Функция ПолучитьВопросыПоВыбраннойГлаве(Глава,ВернутьКоличествоСтрок=Ложь)
	 		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВопросыТест.Вопрос КАК Вопрос,
		|	ВопросыТест.ВариантыОтветов.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		Ответ КАК Ответ,
		|		ПравельныйОтвет КАК ПравельныйОтвет,
		|		ДополнительныеОтметки КАК ДополнительныеОтметки
		|	) КАК ВариантыОтветов,
		|	ВопросыТест.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ВопросыТест КАК ВопросыТест
		|ГДЕ
		|	ВопросыТест.Глава = &Глава";
	
	Запрос.УстановитьПараметр("Глава", Глава);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Если ВернутьКоличествоСтрок Тогда
		Возврат РезультатЗапроса.Количество();	
	Иначе	
		Возврат РезультатЗапроса;
	КонецЕсли;

КонецФункции
&НаСервере
Функция ПолучитьВопросыРаботыНадОшибками(Глава,ВернутьКоличествоСтрок=Ложь)
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НеправельныеОтветы.Вопросы КАК Вопросы
		|ИЗ
		|	РегистрСведений.НеправельныеОтветы КАК НеправельныеОтветы
		|ГДЕ
		|	НеправельныеОтветы.Счетчик > 0
		|	И НеправельныеОтветы.Глава = &Глава";
	
	Запрос.УстановитьПараметр("Глава", Глава);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Если ВернутьКоличествоСтрок Тогда
		Возврат РезультатЗапроса.Количество();	
	Иначе	
		Возврат РезультатЗапроса;
	КонецЕсли;

КонецФункции	
&НаСервере
Функция ПолучитьВыбранныеВопросы(ВернутьКоличествоСтрок=Ложь)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыбранныеВопросы.Вопросы КАК Вопросы
	|ИЗ
	|	РегистрСведений.ВыбранныеВопросы КАК ВыбранныеВопросы
	|ГДЕ
	|	ВыбранныеВопросы.Счетчик > 0";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Если ВернутьКоличествоСтрок Тогда
		Возврат РезультатЗапроса.Количество();	
	Иначе	
		Возврат РезультатЗапроса;
	КонецЕсли;
КонецФункции
&НаСервере
Функция ПолучитьВыбранныеВопросыУчитыватьГлаву(ВернутьКоличествоСтрок=Ложь)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыбранныеВопросы.Вопросы КАК Вопросы
	|ИЗ
	|	РегистрСведений.ВыбранныеВопросы КАК ВыбранныеВопросы
	|ГДЕ
	|	ВыбранныеВопросы.Счетчик > 0
	|	И ВыбранныеВопросы.Глава = &Глава";
	
	Запрос.УстановитьПараметр("Глава", Объект.Глава);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Если ВернутьКоличествоСтрок Тогда
		Возврат РезультатЗапроса.Количество();	
	Иначе	
		Возврат РезультатЗапроса;
	КонецЕсли;
КонецФункции	


&НаСервере
Функция НайтиОтвет()
	 Перем Отбор, НайденноеЗначение, Сч;
	 Отбор = Новый Структура();
	 Отбор.Вставить("ПравельныйОтвет", Истина);
	 НайденноеЗначение = Объект.ВариантыОтветов.НайтиСтроки(Отбор);
	 Если НайденноеЗначение.Количество() Тогда
		   Возврат НайденноеЗначение[0].НомерСтроки;
	 КонецЕсли;
	 
КонецФункции

&НаСервере
Процедура ДвигатьсяВперед()
	
		Если ЭтаФорма.Вопросы.Количество() = 0  Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Вопросов нет";
			Сообщение.Сообщить();	
			ЭтаФорма.ВариантыОтветов.Очистить();
		Иначе
			КоличествоВопросов = ЭтаФорма.Вопросы.Количество();
			ЭтаФорма.ОсталосьОтветитьНаВопросы  =  КоличествоВопросов;
			ГСЧ = Новый ГенераторСлучайныхЧисел;
		
			СлучайноеЧисло = ГСЧ.СлучайноеЧисло(0, КоличествоВопросов-1);		
			Объект.Вопрос = ЭтаФорма.Вопросы[СлучайноеЧисло].Вопрос;
			Объект.Ссылка = ЭтаФорма.Вопросы[СлучайноеЧисло].Ссылка;
		
			//Элементы.КартинкаВопроса = Объект.Ссылка
			Объект.ВариантыОтветов.Очистить();
			Для Каждого Строка из ЭтаФорма.ВариантыОтветов Цикл  
				Если Строка(Объект.Вопрос) = Строка(Строка.Вопрос) Тогда
					НоваяСтрока = Объект.ВариантыОтветов.Добавить();
					НоваяСтрока.Вариант = Строка.Ответ;
					НоваяСтрока.ПравельныйОтвет = Строка.ПравельныйОтвет;
					НоваяСтрока.ДополнительныеОтметки = Строка.ДополнительныеОтметки;
				КонецЕсли;
			КонецЦикла;	
		// Перед удалением считываем данные с строки	
		ЭтаФорма.Вопросы.Удалить(СлучайноеЧисло);

		КонецЕсли;	
КонецПроцедуры
&НаСервере
Процедура ПолучениеВопросовРаботыНадОшибками()
	ЭтаФорма.ВариантыОтветов.Очистить();
	ПеремВопросы = ПолучитьВопросыРаботыНадОшибками(Объект.Глава);
	ЭтаФорма.КоличествоВопросовВсего = ПеремВопросы.Количество();
	Для Каждого Строка Из ПеремВопросы Цикл
		НоваяСтрока = ЭтаФорма.Вопросы.Добавить();
		Для Каждого СтрокиОтветов Из Строка.Вопросы.ВариантыОтветов Цикл 
			   ЕщеСтрока = ЭтаФорма.ВариантыОтветов.Добавить();
			   ЕщеСтрока["Вопрос"] = Строка.Вопросы.Вопрос;
			   ЕщеСтрока["Ответ"] = СтрокиОтветов.Ответ;
			   ЕщеСтрока["ПравельныйОтвет"] = СтрокиОтветов.ПравельныйОтвет;
			   ЕщеСтрока["ДополнительныеОтметки"] = СтрокиОтветов.ДополнительныеОтметки;
		КонецЦикла;	
		НоваяСтрока["Вопрос"] = Строка.Вопросы.Вопрос;
		НоваяСтрока["Ссылка"] = строка.Вопросы.Ссылка;
	КонецЦикла;	
	ДвигатьсяВперед();
КонецПроцедуры	
&НаСервере
Процедура ПолучениеВопросовПоГлавам()
	
	ПеремВопросы = 	ПолучитьВопросыПоВыбраннойГлаве(Объект.Глава);
	ЭтаФорма.КоличествоВопросовВсего =  ПеремВопросы.Количество();
	Для Каждого Строка Из ПеремВопросы Цикл
		НоваяСтрока = ЭтаФорма.Вопросы.Добавить();
		Для Каждого СтрокиОтветов Из Строка.ВариантыОтветов Цикл 
			   ЕщеСтрока = ЭтаФорма.ВариантыОтветов.Добавить();
			   ЕщеСтрока["Вопрос"] = СтрокиОтветов.Ссылка.Вопрос;
			   ЕщеСтрока["Ответ"] = СтрокиОтветов.Ответ;
			   ЕщеСтрока["ПравельныйОтвет"] = СтрокиОтветов.ПравельныйОтвет;
			   ЕщеСтрока["ДополнительныеОтметки"] = СтрокиОтветов.ДополнительныеОтметки;
		КонецЦикла;	
		НоваяСтрока["Вопрос"] = Строка.Вопрос;
		НоваяСтрока["Ссылка"] = строка.Ссылка;
	КонецЦикла;	
	ДвигатьсяВперед();
	
КонецПроцедуры
&НаСервере
Процедура ПолучениеВыбранныхВопросов() 
	Если УчитыватьГлаву Тогда
		ПеремВопросы = ПолучитьВыбранныеВопросыУчитыватьГлаву();
	Иначе	
		ПеремВопросы = ПолучитьВыбранныеВопросы();
	КонецЕсли;	
	ЭтаФорма.КоличествоВопросовВсего =  ПеремВопросы.Количество();
	Для Каждого Строка Из ПеремВопросы Цикл
		НоваяСтрока = ЭтаФорма.Вопросы.Добавить();
		Для Каждого СтрокиОтветов Из Строка.Вопросы.ВариантыОтветов Цикл 
			   ЕщеСтрока = ЭтаФорма.ВариантыОтветов.Добавить();
			   ЕщеСтрока["Вопрос"] = Строка.Вопросы.Вопрос;
			   ЕщеСтрока["Ответ"] = СтрокиОтветов.Ответ;
			   ЕщеСтрока["ПравельныйОтвет"] = СтрокиОтветов.ПравельныйОтвет;
			   ЕщеСтрока["ДополнительныеОтметки"] = СтрокиОтветов.ДополнительныеОтметки;
		КонецЦикла;	
		НоваяСтрока["Вопрос"] = Строка.Вопросы.Вопрос;
		НоваяСтрока["Ссылка"] = строка.Вопросы.Ссылка;
	КонецЦикла;	
	ДвигатьсяВперед();
КонецПроцедуры	
&НаКлиенте
Процедура ЗагрузитьВопросы(Команда)
	
	СообщениеОКоличествеВопросов = "";
	Элементы.СообщениеОКоличествеВопросов.Видимость=Ложь;
	ЭтаФорма.КоличествоОтветовПравельно = 0;
	ЭтаФорма.КоличествоОтветовНеправельно = 0;
	ЗапускТаймераВопрос();
	ЗапускТаймераОбщее();

	Если ЗначениеЗаполнено(Объект.ВидТестирования) <> Истина Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Заполните ВидТестирования ";
		Сообщение.Сообщить();

	КонецЕсли;	
	Если Объект.ВидТестирования = ПредопределенноеЗначение("Перечисление.ВидТестирования.ПоГлавам") Тогда
		 ПолучениеВопросовПоГлавам();
	КонецЕсли;
	Если  Объект.ВидТестирования = ПредопределенноеЗначение("Перечисление.ВидТестирования.РаботаНадОшибками") Тогда
		 ПолучениеВопросовРаботыНадОшибками();
	КонецЕсли;
	Если Объект.ВидТестирования = ПредопределенноеЗначение("Перечисление.ВидТестирования.ВыбранныеВопросы") Тогда
		ПолучениеВыбранныхВопросов();
	КонецЕсли;
	//ЗапускТаймера();
	КонецПроцедуры
&НаСервере
Процедура ЗаписьВремениВопрос()
	 //?
КонецПроцедуры	
&НаКлиенте
Процедура СформироватьОтчет()
	
	 //Создаем табличный документ
	 ТабДокумент = Новый ТабличныйДокумент;
	 
	 //Указываем ориентацию страницы.
	 //Портретная по умолчанию
	 ТабДокумент.ОриентацияСтраницы =
	 ОриентацияСтраницы.Портрет;
	 РаботаВМенеджере(ТабДокумент);
	 ТабДокументОтображатьСетку = Ложь;
	 ТабДокумент.Показать();	  
	 НеправельныеОтветы.Очистить(); 
 КонецПроцедуры	
 &НаСервере
 Процедура РаботаВМенеджере(ТабДокумент)
	Обработки.Тест.Печать(ТабДокумент,НеправельныеОтветы); 
 КонецПроцедуры	 
 
&НаКлиенте
Процедура Следующий(Команда)
	    Элементы.ВариантыОтветовВыбор.Доступность = Истина;
		Элементы.ВариантыОтветовДополнительныеОтметки.Видимость = Ложь;
		ЗапускТаймераВопрос();
		ЗаписьВремениВопрос();		
		ДвигатьсяВперед();
		Если ЭтаФорма.Вопросы.Количество() = 0  Тогда
			ОтключитьТаймерОбщее();
			//ВывестиСообщениеОКолВопросовДляСледубщегоТестаПоВидуТестирования();
		КонецЕсли;	
		
КонецПроцедуры
	

&НаКлиенте
Процедура ВидТестированияПриИзменении(Элемент)
	Если Объект.ВидТестирования = ПредопределенноеЗначение("Перечисление.ВидТестирования.ПоВсемГлавам") Тогда
		Элементы.РандомноКоличествоВопросов.Видимость = Истина;
	Иначе
		Элементы.РандомноКоличествоВопросов.Видимость = Ложь;
    КонецЕсли;
КонецПроцедуры
// не работает
&НаСервере
Процедура РаскраскаОтветов()
		Оформление = УсловноеОформление.Элементы.Добавить();
		Оформление.Использование=Истина;
		ПолеВыбор = Оформление.Поля.Элементы.Добавить();
		ПолеВыбор.Поле = Новый ПолеКомпоновкиДанных("ВариантыОтветовВыбор");
		Отбор = Оформление.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ВариантыОтветов.ПравельныйОтвет");
		Отбор.ПравоеЗначение = Истина;
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Отбор.Использование=Истина;
		Оформление.Оформление.УстановитьЗначениеПараметра("ЦветТекста",WebЦвета.Красный);
КонецПроцедуры	
// не работает
&НаСервере
Процедура РаскраситьТаблицу()
	//очищаем ранее назначенные элементы оформления
	УсловноеОформление.Элементы.Очистить();
	
	КолонкиИмена = Новый Массив;
	//КолонкиИменаНеучаствуют = Новый Массив;
	
	Для Каждого Колонка Из Объект.ВариантыОтветов.Выгрузить(Новый Массив(),).Колонки Цикл
		Если СтрНайти(Колонка.Имя,"Вариант") > 0 Тогда
			КолонкиИмена.Добавить(Колонка.Имя);
		//ИначеЕсли  СтрНайти(Колонка.Имя,"ПравельныйОтвет") = Ложь Тогда
		//	КолонкиИменаНеУчаствуют.Добавить(Колонка.Имя);
		КонецЕсли;	
	КонецЦикла;	
	
	Для Каждого Колонка Из КолонкиИмена Цикл
		//Добавляем новый элемент условного оформления
		ЭлементУО = УсловноеОформление.Элементы.Добавить();
		//устанавливаем само оформление
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона",WebЦвета.СветлоЗеленый);
		// добавляем условия
		ЭлементУсловия = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		// что сравниваем
		ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантыОтветовПравельныйОтвет");
		// как сравниваем
		ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		// С чем сравниваем
		ЭлементУсловия.ПравоеЗначение = Истина;
	КонецЦикла;	
КонецПроцедуры	
//Конец не работает
&НаСервере
Процедура ЗаписатьНеправельныйОтвет()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НеправельныеОтветы.Период КАК Период,
		|	НеправельныеОтветы.Вопросы КАК Вопросы,
		|	НеправельныеОтветы.Счетчик КАК Счетчик,
		|	НеправельныеОтветы.Глава КАК Глава
		|ИЗ
		|	РегистрСведений.НеправельныеОтветы КАК НеправельныеОтветы
		|ГДЕ
		|	НеправельныеОтветы.Вопросы = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	МенеджерЗаписи = РегистрыСведений.НеправельныеОтветы.СоздатьМенеджерЗаписи();
	Счетчик = Константы.Счетчик.Получить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если  Выборка.Следующий() Тогда
		//Возврат;
		МенеджерЗаписи.Период = Выборка.Период;
		МенеджерЗаписи.Глава = Выборка.Глава;
		Если Выборка.Счетчик < Счетчик Тогда
			МенеджерЗаписи.Счетчик = Выборка.Счетчик +5;
		Иначе
			МенеджерЗаписи.Счетчик = Выборка.Счетчик;
		КонецЕсли;	
		МенеджерЗаписи.Вопросы = Выборка.Вопросы;
		МенеджерЗаписи.Записать(Истина);
	Иначе
		
		МенеджерЗаписи.Период = ТекущаяДата();
		МенеджерЗаписи.Глава = Объект.Ссылка.Глава;
		МенеджерЗаписи.Счетчик = Константы.Счетчик.Получить();
		МенеджерЗаписи.Вопросы = Объект.Ссылка;
		МенеджерЗаписи.Записать(Ложь);

	КонецЕсли;
		
	
КонецПроцедуры	
&НаСервере
Процедура УменьшимСчетчик()
	Если  Объект.ВидТестирования = ПредопределенноеЗначение("Перечисление.ВидТестирования.РаботаНадОшибками") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	НеправельныеОтветы.Период КАК Период,
			|	НеправельныеОтветы.Вопросы КАК Вопросы,
			|	НеправельныеОтветы.Счетчик КАК Счетчик,
			|	НеправельныеОтветы.Глава КАК Глава
			|ИЗ
			|	РегистрСведений.НеправельныеОтветы КАК НеправельныеОтветы
			|ГДЕ
			|	НеправельныеОтветы.Вопросы = &Ссылка";
	
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
		РезультатЗапроса = Запрос.Выполнить();
		Счетчик = Константы.Счетчик.Получить();
		Выборка = РезультатЗапроса.Выбрать();
	
		Если  Выборка.Следующий() Тогда
			//Возврат;
			МенеджерЗаписи = РегистрыСведений.НеправельныеОтветы.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Период = Выборка.Период;
			МенеджерЗаписи.Глава = Выборка.Глава;
			Если Выборка.Счетчик > 0 Тогда
				МенеджерЗаписи.Счетчик = Выборка.Счетчик - 1;
			КонецЕсли;
			МенеджерЗаписи.Вопросы = Выборка.Вопросы;
			МенеджерЗаписи.Записать(Истина);
		КонецЕсли;
	КонецЕсли;
	Если Объект.ВидТестирования = ПредопределенноеЗначение("Перечисление.ВидТестирования.ВыбранныеВопросы") Тогда
		   Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВыбранныеВопросы.Период КАК Период,
		|	ВыбранныеВопросы.Глава КАК Глава,
		|	ВыбранныеВопросы.Вопросы КАК Вопросы,
		|	ВыбранныеВопросы.Счетчик КАК Счетчик
		|ИЗ
		|	РегистрСведений.ВыбранныеВопросы КАК ВыбранныеВопросы
		|ГДЕ
		|	ВыбранныеВопросы.Вопросы = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
	
		Если  Выборка.Следующий() Тогда
			МенеджерЗаписи = РегистрыСведений.ВыбранныеВопросы.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Период = Выборка.Период;
			МенеджерЗаписи.Глава = Выборка.Глава;
			Если Выборка.Счетчик > 0 Тогда
				МенеджерЗаписи.Счетчик = Выборка.Счетчик - 1;	
			КонецЕсли;	
			МенеджерЗаписи.Вопросы = Выборка.Вопросы;
			МенеджерЗаписи.Записать(Истина);
		КонецЕсли;

	КонецЕсли;	
КонецПроцедуры	
&НаСервере
Процедура РезультатТестирования()
		Объект.ВариантыОтветов.Очистить();
		МенеджерЗаписи = РегистрыСведений.РезультатТеста.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Период = ТекущаяДата();
		МенеджерЗаписи.ВидТестирования = Объект.ВидТестирования;
		МенеджерЗаписи.Глава = Объект.Глава;
		МенеджерЗаписи.ВопросовВсего = ЭтаФорма.КоличествоВопросовВсего;
		МенеджерЗаписи.НеправельныеОтветы = ЭтаФорма.КоличествоОтветовНеправельно;
		МенеджерЗаписи.ПравельныеОтветы = ЭтаФорма.КоличествоОтветовПравельно;
		МенеджерЗаписи.Время = Элементы.ТаймерВыводОбщий.Заголовок;
		МенеджерЗаписи.ПроцентОшибок = Окр(ЭтаФорма.КоличествоОтветовНеправельно * 100 /  ЭтаФорма.КоличествоВопросовВсего,0);
		МенеджерЗаписи.Записать();	
		
КонецПроцедуры	
&НаКлиенте
Процедура  ВопросЗаписьВРегистрСведений(РезультатВопроса, ДополнительныеПараметры)     Экспорт
	 Элементы.ВариантыОтветовВыбор.Доступность = Истина;

	Если РезультатВопроса= КодВозвратаДиалога.Да Тогда
		РезультатТестирования();
	КонецЕсли;
	
	Если РезультатВопроса= КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры	
&НаКлиенте
Процедура ЗаписатьНеправельныйОтветДляОтчета()
	Вопрос = Объект.Вопрос;
	
	Для каждого Элемент Из Объект.ВариантыОтветов  Цикл
				
			НС = НеправельныеОтветы.Добавить();
			НС.Вопрос = Вопрос; 
			НС.Ответ =  Элемент.Вариант;
			НС.ПравельныйОтвет = Элемент.ПравельныйОтвет;
	КонецЦикла;
	
		

КонецПроцедуры	
&НаКлиенте
Процедура ВывестиСообщениеОКолВопросовДляСледубщегоТестаПоВидуТестирования()
	Если Объект.ВидТестирования = ПредопределенноеЗначение("Перечисление.ВидТестирования.ПоГлавам") Тогда
	      КолВопросов = ПолучитьВопросыПоВыбраннойГлаве(Объект.Глава,Истина);
	КонецЕсли;
	Если  Объект.ВидТестирования = ПредопределенноеЗначение("Перечисление.ВидТестирования.РаботаНадОшибками") Тогда
	      КолВопросов =  ПолучитьВопросыРаботыНадОшибками(Истина);
	КонецЕсли;
	Если Объект.ВидТестирования = ПредопределенноеЗначение("Перечисление.ВидТестирования.ВыбранныеВопросы") Тогда
	      КолВопросов = ПолучитьВыбранныеВопросы(Истина);
	КонецЕсли;
	Элементы.СообщениеОКоличествеВопросов.Видимость=Истина;
	СообщениеОКоличествеВопросов = "В следующий раз загрузится " + Строка(КолВопросов)+" вопросов";
КонецПроцедуры	

&НаКлиенте
Процедура Проверка()
	ТекущиеДанные = Элементы.ВариантыОтветов.ТекущиеДанные;
	Если ТекущиеДанные.Выбор = ТекущиеДанные.Правельныйответ  Тогда
		 ТекущиеДанные.Правельно = Истина;
		 ЭтаФорма.КоличествоОтветовПравельно =  ЭтаФорма.КоличествоОтветовПравельно + 1; 
		 УменьшимСчетчик();
	 Иначе
		 ЭтаФорма.КоличествоОтветовНеправельно = ЭтаФорма.КоличествоОтветовНеправельно +1; 
		 Для Каждого Строка из Объект.ВариантыОтветов  Цикл
			 Если Строка.ПравельныйОтвет = Истина Тогда 
				 Строка.Правельно = Истина; 
		     КонецЕсли;		 
		 КонецЦикла;
		 ЗаписатьНеправельныйОтвет();  
		 ЗаписатьНеправельныйОтветДляОтчета();  
		 ПоказатьКартинкуОтвета(Объект.Ссылка);
	 КонецЕсли;	
	 Если Вопросы.Количество() = 0 Тогда
		  ЭтаФорма.ОсталосьОтветитьНаВопросы = 0;
		  ПоказатьВопрос(Новый ОписаниеОповещения("ВопросЗаписьВРегистрСведений",ЭтотОбъект),"Записать результат тестирования?",РежимДиалогаВопрос.ДаНет);
		  //Объект.ВариантыОтветов.Очистить();
		  ВариантыОтветов.Очистить();
		  
		  ВывестиСообщениеОКолВопросовДляСледубщегоТестаПоВидуТестирования(); 
		  Если КоличествоОтветовНеправельно > 0 Тогда
		  	СформироватьОтчет();
		  КонецЕсли;	
	 КонецЕсли; 
КонецПроцедуры	
&НаКлиенте
Процедура Проверить(Команда)
	Проверка();	
КонецПроцедуры

&НаКлиенте
Процедура ВариантыОтветовВыборПриИзменении(Элемент)
	ОтключитьТаймерВопрос();
	
	ТекущиеДанные = Элементы.ВариантыОтветов.ТекущиеДанные;
	Для Каждого Строка Из  Объект.ВариантыОтветов Цикл 
		Если Не Строка.Вариант = ТекущиеДанные.Вариант Тогда
			 Строка.Выбор = Ложь;
			 
		КонецЕсли;	
	КонецЦикла;	
	Проверка(); 
    Элементы.ВариантыОтветовВыбор.Доступность = Ложь;
	Для Каждого Строка Из  Объект.ВариантыОтветов Цикл 
		Если Строка.ДополнительныеОтметки = Истина Тогда 
			Элементы.ВариантыОтветовДополнительныеОтметки.Видимость = Истина;
			Элементы.ВариантыОтветовДополнительныеОтметки.Доступность = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//Таймер  Пример
&НаКлиенте
Процедура ЗапускТаймера()   						// вставляем имя процедуры в команду запуск пользователем
	ПодключитьОбработчикОжидания("Отчет",1);
	Элементы.ТаймерВопрос.Заголовок = 1800; 		//Количество секунд до оотчета, 30 мин
	
КонецПроцедуры	

&НаКлиенте
Процедура Отчет()   								// подсчет времени на убывание
	Если Число(Элементы.ТаймерВопрос.Заголовок) = 0 Тогда
		ОтключитьОбработчикОжидания("Отчет"); 		// Когда количество секунд дойдет до нуля, отключаем обработчик ожидания (Виртуальный таймер)
		//ЗавершениеТестирования();           		// процедура выводит результат прохождения тестирования.
	Иначе
		Элементы.ТаймерВопрос.Заголовок = Число(Элементы.ТаймерВопрос.Заголовок)-1; // отнимем каждый раз по 1 секунде
		//Получаем минуты, для получения часов секунды делим на 3600
		Минуты = Цел(Число(Элементы.ТаймерВопрос.Заголовок)/60);
		//Считаем остаток
		ОстатокСекунд = Число(Элементы.ТаймерВопрос.Заголовок)%60;
		
		Если ОстатокСекунд < 10 Тогда               // выводим таймер в определенном формате
			Элементы.ТаймерВыводВопрос.Заголовок = "" + Минуты+ ":0"+ ОстатокСекунд;
		Иначе
			Элементы.ТаймерВыводВопрос.Заголовок = "" + Минуты+ ":"+ ОстатокСекунд;
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьТаймер() // процедура используется для отключения таймера по команде пользователя
	   ОтключитьОбработчикОжидания("Отчет");
КонецПроцедуры	
//КонецТаймера  Пример

&НаКлиенте
Процедура ЗапускТаймераВопрос()
	ПодключитьОбработчикОжидания("ХодВремениДляСекундомераНаУвеличениеВопрос",1);
	Элементы.ТаймерВопрос.Заголовок = 0; 
КонецПроцедуры

&НаКлиенте
Процедура ХодВремениДляСекундомераНаУвеличениеВопрос()   								// подсчет времени на убывание
		Элементы.ТаймерВопрос.Заголовок = Число(Элементы.ТаймерВопрос.Заголовок)+1; // отнимем каждый раз по 1 секунде
		//Получаем минуты, для получения часов секунды делим на 3600
		Минуты = Цел(Число(Элементы.ТаймерВопрос.Заголовок)/60);
		//Считаем остаток
		ОстатокСекунд = Число(Элементы.ТаймерВопрос.Заголовок)%60;
		
		Если ОстатокСекунд < 10 Тогда               // выводим таймер в определенном формате
			Элементы.ТаймерВыводВопрос.Заголовок = "" + Минуты+ ":0"+ ОстатокСекунд;
			
		Иначе
			Элементы.ТаймерВыводВопрос.Заголовок = "" + Минуты+ ":"+ ОстатокСекунд;
		КонецЕсли;	
		
		Если ОстатокСекунд > 30 Тогда
			Элементы.ТаймерВыводВопрос.ЦветТекста = Новый Цвет(255, 0, 0);
			Элементы.Декорация2.ЦветТекста = Новый Цвет(255,0,0);
		Иначе
			Элементы.ТаймерВыводВопрос.ЦветТекста = Новый Цвет(0, 128, 128);
			Элементы.Декорация2.ЦветТекста = Новый Цвет(0, 128, 128);
		КонецЕсли;		
		
КонецПроцедуры


&НаКлиенте
Процедура ОтключитьТаймерВопрос()
	ОтключитьОбработчикОжидания("ХодВремениДляСекундомераНаУвеличениеВопрос");
КонецПроцедуры	

&НаКлиенте
Процедура ЗапускТаймераОбщее()
	ПодключитьОбработчикОжидания("ХодВремениДляСекундомераНаУвеличениеОбщее",1);
	Элементы.ТаймерОбщий.Заголовок = 0;
КонецПроцедуры	

// Процедура - Ход общего времени для секундомера на увеличение  
//
&НаКлиенте
Процедура ХодВремениДляСекундомераНаУвеличениеОбщее()   								// подсчет времени на убывание
		Элементы.ТаймерОбщий.Заголовок = Число(Элементы.ТаймерОбщий.Заголовок)+1; // отнимем каждый раз по 1 секунде
		//Получаем минуты, для получения часов секунды делим на 3600
		Минуты = Цел(Число(Элементы.ТаймерОбщий.Заголовок)/60);
		//Считаем остаток
		ОстатокСекунд = Число(Элементы.ТаймерОбщий.Заголовок)%60;
		
		Если ОстатокСекунд < 10 Тогда               // выводим таймер в определенном формате
			Элементы.ТаймерВыводОбщий.Заголовок = "" + Минуты+ ":0"+ ОстатокСекунд;
			
		Иначе
			Элементы.ТаймерВыводОбщий.Заголовок = "" + Минуты+ ":"+ ОстатокСекунд;
		КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьТаймерОбщее()
	ОтключитьОбработчикОжидания("ХодВремениДляСекундомераНаУвеличениеОбщее");
КонецПроцедуры	


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ВариантыОтветовПравельно.Доступность = Ложь;
	Элементы.ВариантыОтветовДополнительныеОтметки.Видимость=Ложь;
КонецПроцедуры


&НаКлиенте
Процедура Пауза(Команда)
	
	Если МенятьТекстКнопки = Ложь Тогда
		Элементы.Пауза.Заголовок = "Возобновить";
		МенятьТекстКнопки = Истина;
		ОтключитьТаймерОбщее();
	    ОтключитьТаймерВопрос();
	Иначе
		 Элементы.Пауза.Заголовок = "Пауза";
		 МенятьТекстКнопки = Ложь;
		 ПодключитьОбработчикОжидания("ХодВремениДляСекундомераНаУвеличениеОбщее",1);
		 ПодключитьОбработчикОжидания("ХодВремениДляСекундомераНаУвеличениеВопрос",1);
	КонецЕсли;	
	
		
КонецПроцедуры
&НаСервере
Функция ПолучитьСсылкуНаКартинку(СсылкаНаКартинку)
	КартинкаОбъект = СсылкаНаКартинку.ПолучитьОбъект();
	Картинка = ПолучитьНавигационнуюСсылку(КартинкаОбъект.Ссылка,"ДанныеКартинкиОтвет");

	Возврат Картинка; 
КонецФункции // ПолучитьСсылкуНаКартинку()

&НаКлиенте
Процедура ПоказатьКартинкуОтвета(СсылкаНаКартинку)
	Картинка = ПолучитьСсылкуНаКартинку(СсылкаНаКартинку);
	Если Картинка <> Неопределено Тогда
		ПараметрыСтруктура = Новый Структура("Картинка",Картинка);
		ФормаОткрыть = ПолучитьФорму("ОбщаяФорма.ФормаПоказатьКартинку",ПараметрыСтруктура);
		ФормаОткрыть.Открыть();
	КонецЕсли;	
КонецПроцедуры	
